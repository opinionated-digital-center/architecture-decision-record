.PHONY: *

#################################################################
# help
#################################################################

help:
	@echo "GIT TARGETS:"
	@echo "\tprune-branches - prune obsolete local tracking branches and local branches"
	@echo "\tprune-branches-force|pbf - as above but force delete local branches"
	@echo "\tpost-PR-merge-sync|pms - switch to master, pull and run pbf target"


#################################################################
# Shared functions
#################################################################

# Check that given variables are set and all have non-empty values,
# die with an error otherwise.
#
# Params:
#   1. Variable name(s) to test.
#   2. (optional) Error message to print.
# Details at https://stackoverflow.com/a/10858332/4374048
check_defined = \
    $(strip $(foreach 1,$1, \
        $(call __check_defined,$1,$(strip $(value 2)))))
__check_defined = \
    $(if $(value $1),, \
      $(error Undefined $1$(if $2, ($2)): please pass as argument (see help target)))


#################################################################
# setting up ci-cd env
#################################################################

setup-cicd-common:
	pip install --upgrade pip
	pip install pyadr

setup-cicd-check-stage: setup-cicd-common

setup-cicd-release-stage: setup-cicd-common


#################################################################
# pre-merge checks
#################################################################

pre-merge-checks:
	git adr pre-merge-checks


#################################################################
# releasing (steps)
#################################################################

bump:
	$(call check_defined, NEW_VERSION)
	echo "# This file is automatically generated during the release process\n# Do not edit manually\n\nversion = \"$(NEW_VERSION)\"" > VERSION

generate-toc:
	pyadr generate-toc

release: bump generate-toc

#################################################################
# git targets
#################################################################

prune-branches:
	git remote prune origin
	git branch -vv | grep ': gone]'|  grep -v "\*" | awk '{ print $$1; }' | xargs git branch -d


prune-branches-force:
	git remote prune origin
	git branch -vv | grep ': gone]'|  grep -v "\*" | awk '{ print $$1; }' | xargs git branch -D

pbf: prune-branches-force

post-PR-merge-sync-step-1:
	git switch master
	git pull

post-PR-merge-sync: post-PR-merge-sync-step-1 prune-branches-force

pms: post-PR-merge-sync
